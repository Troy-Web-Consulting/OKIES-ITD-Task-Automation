import { test, expect } from '@playwright/test';

test('test', async ({ page }) => {
  test.setTimeout(120_000)

  //Login
  await page.goto('https://okies-test.occ.ok.gov/');
  await page.getByRole('button', { name: ' External User Access For' }).click();
  await page.getByRole('textbox', { name: 'Email Address' }).click();
  await page.getByRole('textbox', { name: 'Email Address' }).fill(EMAIL);
  await page.getByRole('textbox', { name: 'Password' }).click();
  await page.getByRole('textbox', { name: 'Password' }).fill(PASSWORD);
  await page.getByRole('button', { name: 'Sign in' }).click();

  //Form Creation & Form Information
  const page1Promise = page.waitForEvent('popup');
  await page.getByRole('link', { name: 'Notice of Intent To Drill (' }).click();
  const page1 = await page1Promise;
  await page1.getByRole('combobox', { name: 'Notice of Intent to*' }).locator('span').nth(1).click();
  await page1.getByRole('option', { name: 'Drill' }).click();
  await page1.locator('span').filter({ hasText: 'Directional HoleHorizontal' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'Directional Hole' }).click();
  await page1.getByRole('combobox', { name: 'Type of Well*' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'Oil & Gas' }).click();
  await page1.locator('div:nth-child(26) > .k-picker > .k-input-button').click();
  await page1.getByText('Non-Expedited').click();
  await page1.getByRole('button', { name: 'Save & Continue' }).click();
  await page1.getByRole('button', { name: 'Confirm' }).click();

  //Operator Information
  await page1.waitForTimeout(1000); //wait for 1 second
  await page1.getByTestId('oi-organization-mailing-address-1').click();
  await page1.getByTestId('oi-organization-mailing-address-1').fill('ryan.tuck@troyweb.com');
  await page1.getByTestId('oi-organization-primary-phone').click();
  await page1.getByTestId('oi-organization-primary-phone').fill('508-789-4688');
  await page1.getByRole('button', { name: 'Next', exact: true }).click();

  //Well Information
  await page1.waitForTimeout(1000); //wait for 1 second
  await page1.getByTestId('wi-well-name').click();
  await page1.getByTestId('wi-well-name').fill('Automated Maximal Form Well Name');
  await page1.getByTestId('wi-well-name').press('Tab');
  await page1.getByTestId('wi-well-number').fill('123');
  await page1.locator('#SectionContainer').getByRole('button', { name: 'select' }).click();
  await page1.getByRole('option', { name: '01' }).click();
  await page1.locator('#TownshipContainer').getByRole('button', { name: 'select' }).click();
  await page1.getByRole('option', { name: '01N' }).click();
  await page1.locator('#RangeContainer').getByRole('button', { name: 'select' }).click();
  await page1.getByRole('option', { name: '01E' }).click();
  await page1.locator('#MeridianContainer').getByRole('button', { name: 'select' }).click();
  await page1.getByRole('option', { name: 'CM' }).click();
  await page1.locator('#CountyContainer').getByRole('button', { name: 'select' }).click();
  await page1.getByRole('option', { name: 'Choctaw' }).nth(0).click(); //randomly required specification at some point. What causes this issue?
  await page1.locator('#NorthSouthOffsetContainer').getByRole('spinbutton').click();
  await page1.getByTestId('wi-north-south-offset').fill('500');
  await page1.locator('#NorthSouthContainer span').nth(1).click();
  await page1.getByRole('option', { name: 'North' }).click();
  await page1.locator('#EastWestOffsetContainer').getByRole('spinbutton').click();
  await page1.getByTestId('wi-east-west-offset').fill('400');
  await page1.locator('#EastWestContainer').getByRole('button', { name: 'select' }).click();
  await page1.getByRole('option', { name: 'East' }).click();
  await page1.locator('#Quarter').click();
  await page1.locator('#Quarter').fill('2');
  await page1.locator('#LatitudeContainer').getByRole('spinbutton').click();
  await page1.getByTestId('wl-latitude').click();
  await page1.getByTestId('wl-latitude').fill('35.466');
  await page1.locator('#LongitudeContainer').getByRole('spinbutton').click();
  await page1.getByTestId('wl-longitude').fill('-97.5177');
  await page1.locator('#GroundElevationContainer').getByRole('spinbutton').click();
  await page1.getByTestId('wi-ground-information').fill('150');
  await page1.locator('#BaseTreatableWaterContainer').getByRole('spinbutton').click();
  await page1.getByTestId('wi-base-treatable-water').fill('450');
  await page1.locator('#PropertyBoundaryDistanceContainer').getByRole('spinbutton').click();
  await page1.getByTestId('wl-property-distance').fill('1200');
  await page1.locator('.k-datepicker > .k-input-button').click();
  await page1.getByTestId('wi-spud-date').click();
  await page1.getByTestId('wi-spud-date').fill('07/30/2050');
  await page1.getByTestId('wi-spud-date').press('Enter');
  await page1.getByRole('button', { name: 'Enter Well Location' }).click();
  await page1.locator('.well-location-grid > tbody > tr:nth-child(13) > td:nth-child(13)').click();
  await page1.getByLabel('Coordinate Grid: Locate Well').getByRole('button', { name: 'Save' }).click();
  await page1.getByRole('button', { name: 'Actions' }).click();
  await page1.getByRole('link', { name: 'Add Surface Owner' }).click();
  await page1.getByTestId('wi-so-modal-name').click();
  await page1.getByTestId('wi-so-modal-name').fill('John Owner');
  await page1.getByTestId('wi-so-modal-name').press('Tab');
  await page1.getByTestId('wi-so-modal-address-line-1').fill('Oklahoma Road');
  await page1.getByTestId('wi-so-modal-city').click();
  await page1.getByTestId('wi-so-modal-city').fill('Oklahoma City');
  await page1.getByRole('combobox', { name: 'State*' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'OK' }).click();
  await page1.getByTestId('wi-so-modal-zip').click();
  await page1.getByTestId('wi-so-modal-zip').fill('12000_');
  await page1.getByRole('combobox', { name: 'Country*' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'USA' }).click();
  await page1.getByRole('button', { name: 'Save' }).nth(1).click();
  // await page1.getByRole('textbox', { name: '"Add Comment"' }).click();
  // await page1.getByRole('textbox', { name: '"Add Comment"' }).fill('This is a comment');
  // await page1.getByRole('button', { name: 'Add' }).click();
  await page1.getByRole('button', { name: 'Next', exact: true }).click();

  //Geologic Information
  await page1.waitForTimeout(1000); //wait for 1 second
  await page1.getByRole('checkbox', { name: 'Yes' }).check();
  await page1.locator('#ProposedLogs_3__LogResponse_No').check();
  await page1.locator('#ProposedLogs_10__LogResponse_No').check();
  await page1.locator('#ProposedLogs_17__LogResponse_No').check();
  await page1.locator('#ProposedLogs_16__LogResponse_No').check();
  await page1.locator('#ProposedLogs_18__LogResponse_No').check();
  await page1.getByTestId('gi-other-proposed').click();
  await page1.getByTestId('gi-other-proposed').fill('These are other proposed logs, cores, and/or tests');
  await page1.getByRole('button', { name: 'Actions' }).click();
  await page1.getByRole('link', { name: 'Add Zone' }).click();
  await page1.getByRole('combobox', { name: 'Zone Category*' }).locator('span').nth(1).click();
  await page1.getByText('Target').click();
  await page1.getByRole('combobox', { name: 'Zone Name*' }).locator('span').nth(1).click();
  await page1.getByRole('option', { name: '1ST BROMIDE - 202BRMD1' }).click();
  await page1.getByRole('combobox', { name: 'Estimated/Actual ' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'Actual' }).click();
  await page1.getByRole('spinbutton', { name: 'Top TVD (ft)' }).click();
  await page1.getByTestId('gi-zos-modal-top-tvd').fill('400');
  await page1.getByRole('spinbutton', { name: 'Bottom TVD (ft)' }).click();
  await page1.getByTestId('gi-zos-modal-bottom-tvd').fill('445');
  await page1.getByTestId('gi-zos-modal-spacing-order-number').click();
  await page1.getByTestId('gi-zos-modal-spacing-order-number').fill('1');
  await page1.getByTestId('gi-zos-modal-size-unit').click();
  await page1.getByTestId('gi-zos-modal-size-unit').fill('10');
  await page1.getByRole('combobox', { name: 'Multi-Unit' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'Yes' }).click();
  await page1.getByRole('combobox', { name: 'Location Exeception' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'Yes' }).click();
  await page1.getByRole('combobox', { name: 'Increased Density' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'Yes' }).click();
  await page1.getByRole('combobox', { name: 'Exception to Rule' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'Yes' }).click();
  await page1.locator('div:nth-child(3) > div:nth-child(2) > .k-picker > .k-input-button').click();
  await page1.getByRole('option', { name: 'Yes' }).click();
  await page1.getByRole('combobox').filter({ hasText: 'Select' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'Yes' }).click();
  await page1.getByRole('button', { name: 'Save' }).nth(1).click();
  // await page1.getByRole('textbox', { name: '"Add Comment"' }).click();
  // await page1.getByRole('textbox', { name: '"Add Comment"' }).fill('This is a comment2');
  // await page1.getByRole('button', { name: 'Add' }).click();
  await page1.getByRole('button', { name: 'Next', exact: true }).click();

  //Order Notations
  await page1.waitForTimeout(1000); //wait for 1 second
  await page1.locator('#LocationExceptionsGridToolbar').getByRole('button', { name: 'Actions' }).click();
  await page1.getByRole('link', { name: 'Add Location Exception' }).click();
  await page1.getByTestId('le-modal-cd-number').click();
  await page1.getByTestId('le-modal-cd-number').fill('123');
  await page1.getByTestId('le-modal-order-number').click();
  await page1.getByTestId('le-modal-order-number').fill('123');
  await page1.getByRole('dialog').locator('div').filter({ hasText: 'CD Number Order Number Type' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'Interim' }).click();
  await page1.locator('#locationPartialContainer').getByRole('button', { name: 'select' }).first().click();
  await page1.getByRole('option', { name: '01' }).click();
  await page1.locator('#locationPartialContainer').getByRole('button', { name: 'select' }).nth(1).click();
  await page1.getByRole('option', { name: '01N' }).click();
  await page1.locator('#locationPartialContainer').getByRole('button', { name: 'select' }).nth(2).click();
  await page1.getByRole('option', { name: '01E' }).click();
  await page1.locator('#locationPartialContainer').getByRole('button', { name: 'select' }).nth(3).click();
  await page1.getByRole('option', { name: 'CM' }).click();
  await page1.locator('#locationPartialContainer').getByRole('combobox').filter({ hasText: 'Select' }).getByLabel('select').click();
  await page1.getByRole('option', { name: '1ST BROMIDE - 202BRMD1' }).click();
  await page1.locator('.panel > div:nth-child(2) > div:nth-child(2) > .k-picker > .k-input-button').click();
  await page1.getByRole('option', { name: 'No Closer Than' }).click();
  await page1.locator('div:nth-child(3) > div > .k-picker > .k-input-button').first().click();
  await page1.getByRole('option', { name: 'No Closer Than' }).click();
  await page1.getByRole('spinbutton').nth(1).click();
  await page1.locator('#FirstNorthSouthOffset').fill('300');
  await page1.getByRole('spinbutton').nth(3).click();
  await page1.locator('#SecondNorthSouthOffset').fill('345');
  await page1.locator('div:nth-child(5) > .k-picker > .k-input-button').first().click();
  await page1.getByRole('option', { name: 'Select' }).click();
  await page1.locator('div:nth-child(5) > .k-picker > .k-input-button').first().click();
  // Consistently breaks here without a timeout and a repeat
  await page1.waitForTimeout(500); //wait for 1/2 second
  await page1.locator('div:nth-child(5) > .k-picker > .k-input-button').first().click();
  await page1.getByRole('option', { name: 'N' }).click();
  await page1.locator('div:nth-child(3) > div:nth-child(4) > .k-picker > .k-input-button').click();
  await page1.getByRole('option', { name: 'S', exact: true }).click();
  await page1.locator('div:nth-child(6) > .k-picker > .k-input-button').click();
  await page1.getByRole('option', { name: 'No Closer Than' }).click();
  await page1.locator('div:nth-child(3) > div:nth-child(5) > .k-picker > .k-input-button').click();
  await page1.getByRole('option', { name: 'No Farther Than' }).locator('span').click();
  await page1.getByRole('spinbutton').nth(2).click();
  await page1.locator('#FirstEastWestOffset').fill('300');
  await page1.getByRole('spinbutton').nth(4).click();
  await page1.locator('#SecondEastWestOffset').fill('500');
  await page1.locator('div:nth-child(9) > .k-picker > .k-input-button').click();
  await page1.getByRole('option', { name: 'E', exact: true }).click();
  await page1.locator('div:nth-child(8) > .k-picker > .k-input-button').click();
  await page1.getByRole('option', { name: 'W' }).click();
  await page1.getByRole('dialog').locator('div').filter({ hasText: 'Operator Named Select Exception to 600\' Rule Select Well' }).getByLabel('select').first().click();
  await page1.getByRole('option', { name: 'Does Match Applicant' }).click();
  await page1.getByRole('dialog').getByRole('combobox').filter({ hasText: 'Select' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'No' }).click();
  await page1.getByTestId('le-modal-well').click();
  await page1.getByTestId('le-modal-well').fill('Well Title');
  await page1.getByTestId('le-modal-recommended-date').click();
  await page1.getByTestId('le-modal-recommended-date').fill('05/22/2026');
  await page1.getByTestId('le-modal-expiration-date').click();
  await page1.getByTestId('le-modal-expiration-date').fill('06/23/2030');
  await page1.getByRole('button', { name: 'Save' }).nth(1).click();
  await page1.locator('#MultiUnitOrdersGridToolbar').getByRole('button', { name: 'Actions' }).click();
  await page1.getByRole('link', { name: 'Add Multi-Unit Order' }).click();
  await page1.getByTestId('muo-modal-cd-number').click();
  await page1.getByTestId('muo-modal-cd-number').fill('12');
  await page1.getByTestId('muo-modal-order-number').click();
  await page1.getByTestId('muo-modal-order-number').fill('123');
  await page1.getByRole('dialog').locator('div').filter({ hasText: 'CD Number Order Number Type' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'Interim' }).click();
  await page1.locator('#locationPartialContainer').getByRole('button', { name: 'select' }).first().click();
  await page1.getByRole('option', { name: '01' }).click();
  await page1.locator('#locationPartialContainer').getByRole('button', { name: 'select' }).nth(1).click();
  await page1.getByRole('option', { name: '01N' }).click();
  await page1.locator('#locationPartialContainer').getByRole('button', { name: 'select' }).nth(2).click();
  await page1.getByText('01W').click();
  await page1.locator('#locationPartialContainer').getByRole('button', { name: 'select' }).nth(3).click();
  await page1.getByRole('option', { name: 'CM' }).click();
  await page1.locator('#locationPartialContainer').getByRole('combobox').filter({ hasText: 'Select' }).getByLabel('select').click();
  await page1.getByRole('option', { name: '2ND AVANT (LOVELL) - 405AV2LV' }).click();
  await page1.getByRole('dialog').getByRole('spinbutton').click();
  await page1.getByTestId('muo-modal-allocation-percentage').click();
  await page1.getByTestId('muo-modal-allocation-percentage').fill('100');
  await page1.getByRole('dialog').getByRole('combobox').filter({ hasText: 'Select' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'Does Match Applicant' }).click();
  await page1.getByTestId('muo-modal-recommended-date').click();
  await page1.getByTestId('muo-modal-recommended-date').fill('6/30/2027');
  await page1.getByTestId('muo-modal-issue-date').click();
  await page1.getByTestId('muo-modal-issue-date').fill('6/30/2029');
  await page1.getByRole('button', { name: 'Save' }).nth(1).click();
  await page1.locator('#ChangeOfOperatorsGridToolbar').getByRole('button', { name: 'Actions' }).click();
  await page1.getByRole('link', { name: 'Add Change of Operator' }).click();
  await page1.getByTestId('co-modal-cd-number').click();
  await page1.getByTestId('co-modal-cd-number').fill('400');
  await page1.getByTestId('co-modal-order-number').click();
  await page1.getByTestId('co-modal-order-number').fill('12');
  await page1.getByRole('dialog').locator('div').filter({ hasText: 'CD Number Order Number Type' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'Emergency' }).click();
  await page1.getByTestId('co-modal-original-order-number').click();
  await page1.getByTestId('co-modal-original-order-number').fill('1245');
  await page1.getByRole('dialog').locator('div').filter({ hasText: 'Order No. being used on permit Form of Relief Select' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'Exception To Rule' }).click();
  await page1.locator('#locationPartialContainer').getByRole('button', { name: 'select' }).first().click();
  await page1.getByRole('option', { name: '02' }).click();
  await page1.locator('#locationPartialContainer').getByRole('button', { name: 'select' }).nth(1).click();
  await page1.getByRole('option', { name: '02N' }).click();
  await page1.locator('#locationPartialContainer').getByRole('button', { name: 'select' }).nth(2).click();
  await page1.getByRole('option', { name: '02W' }).click();
  await page1.locator('#locationPartialContainer').getByRole('combobox').filter({ hasText: 'Select' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'CM' }).click();
  await page1.getByTestId('co-modal-issue-date').click();
  await page1.getByTestId('co-modal-issue-date').fill('05/29/2025');
  await page1.getByTestId('co-modal-recommended-date').click();
  await page1.getByTestId('co-modal-recommended-date').fill('08/12/2028');
  await page1.getByRole('button', { name: 'Save' }).nth(1).click();
  await page1.locator('#ExceptionToRulesGridToolbar').getByRole('button', { name: 'Actions' }).click();
  await page1.getByRole('link', { name: 'Add Exception to Rule' }).click();
  await page1.getByTestId('etr-modal-cd-number').click();
  await page1.getByTestId('etr-modal-cd-number').fill('1');
  await page1.getByTestId('etr-modal-order-number').click();
  await page1.getByTestId('etr-modal-order-number').fill('12');
  await page1.getByRole('dialog').locator('div').filter({ hasText: 'CD Number Order Number Type' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'Interim' }).click();
  await page1.locator('#locationPartialContainer').getByRole('button', { name: 'select' }).first().click();
  await page1.getByRole('option', { name: '11' }).click();
  await page1.locator('#locationPartialContainer').getByRole('button', { name: 'select' }).nth(1).click();
  await page1.getByText('02N', { exact: true }).click();
  await page1.locator('#locationPartialContainer').getByRole('button', { name: 'select' }).nth(2).click();
  await page1.getByText('02W', { exact: true }).click();
  await page1.locator('#locationPartialContainer').getByRole('button', { name: 'select' }).nth(3).click();
  await page1.getByRole('option', { name: 'IM' }).click();
  await page1.locator('#locationPartialContainer').getByRole('combobox').filter({ hasText: 'Select' }).getByLabel('select').click();
  await page1.getByRole('option', { name: '1ST WILCOX - 202WLCX1' }).first().click();
  await page1.getByTestId('etr-modal-rule-number').click();
  await page1.getByTestId('etr-modal-rule-number').fill('32');
  await page1.getByTestId('etr-modal-operator-named').click();
  await page1.getByTestId('etr-modal-operator-named').fill('This is a comment');
  await page1.getByTestId('etr-modal-recommended-date').click();
  await page1.getByTestId('etr-modal-recommended-date').fill('07/08/2029');
  await page1.getByTestId('etr-modal-expiration-date').click();
  await page1.getByTestId('etr-modal-expiration-date').fill('09/10/2030');
  await page1.getByRole('button', { name: 'Save' }).nth(1).click();
  await page1.locator('#IncreasedDensitiesGridToolbar').getByRole('button', { name: 'Actions' }).click();
  await page1.getByRole('link', { name: 'Add Increased Density' }).click();
  await page1.getByTestId('id-modal-cd-number').click();
  await page1.getByTestId('id-modal-cd-number').fill('123456');
  await page1.getByTestId('id-modal-order-number').click();
  await page1.getByTestId('id-modal-order-number').fill('2');
  await page1.getByRole('dialog').locator('div').filter({ hasText: 'CD Number Order Number Type' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'Interim' }).click();
  await page1.locator('#locationPartialContainer').getByRole('button', { name: 'select' }).first().click();
  await page1.getByRole('option', { name: '01' }).click();
  await page1.locator('#locationPartialContainer').getByRole('button', { name: 'select' }).nth(1).click();
  await page1.getByRole('option', { name: '01N' }).click();
  await page1.locator('#locationPartialContainer').getByRole('button', { name: 'select' }).nth(2).click();
  await page1.getByRole('option', { name: '01E' }).click();
  await page1.locator('#locationPartialContainer').getByRole('button', { name: 'select' }).nth(3).click();
  await page1.getByText('CM').click();
  await page1.locator('#locationPartialContainer').getByRole('combobox').filter({ hasText: 'Select' }).getByLabel('select').click();
  await page1.getByText('1ST BROMIDE - 202BRMD1').first().click();
  await page1.getByRole('dialog').getByRole('combobox').filter({ hasText: 'Select' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'Does Not Match Applicant' }).click();
  await page1.getByRole('dialog').getByRole('spinbutton').click();
  await page1.getByTestId('id-modal-recommended-date').click();
  await page1.getByTestId('id-modal-recommended-date').fill('09/30/2042');
  await page1.getByTestId('id-modal-expiration-date').click();
  await page1.getByTestId('id-modal-expiration-date').fill('01/01/2038');
  await page1.getByRole('button', { name: 'Save' }).nth(1).click();
  await page1.locator('#NoticeGivenContainer').getByRole('button', { name: 'select' }).click();
  await page1.getByRole('option', { name: 'Yes' }).click();
  await page1.locator('#DoesApplicantDifferContainer').getByRole('button', { name: 'select' }).click();
  await page1.getByRole('option', { name: 'Yes' }).click();
  await page1.getByTestId('on-operator-name').click();
  await page1.getByTestId('on-operator-name').fill('John Operator');
  await page1.getByTestId('on-address').click();
  await page1.getByTestId('on-address').fill('122 Kansas City, Kansas');
  await page1.getByRole('combobox').filter({ hasText: 'Select' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'Yes' }).click();
  await page1.getByTestId('on-formation').click();
  await page1.getByTestId('on-formation').fill('Formation');
  await page1.getByRole('spinbutton').click();
  await page1.getByTestId('on-acres').fill('123');
  await page1.getByRole('button', { name: 'Enter Lease Outline' }).click();
  await page1.locator('.well-location-grid > tbody > tr:nth-child(7) > td:nth-child(5)').click();
  await page1.getByLabel('Coordinate Grid: Lease Outline').getByRole('button', { name: 'Save' }).click();
  // await page1.getByRole('textbox', { name: '"Add Comment"' }).click();
  // await page1.getByRole('textbox', { name: '"Add Comment"' }).fill('This is a comment');
  // await page1.getByRole('button', { name: 'Add' }).click();
  await page1.getByRole('button', { name: 'Next', exact: true }).click();

  //Pits
  await page1.waitForTimeout(1000); //wait for 1 second
  await page1.getByRole('button', { name: 'Actions' }).click();
  await page1.getByRole('link', { name: 'Add Pit' }).click();
  await page1.locator('.form-group > .k-picker > .k-input-button').first().click();
  await page1.getByRole('option', { name: 'Water-Based' }).click();
  await page1.getByRole('spinbutton').first().click();
  await page1.getByTestId('pits-modal-max-ppm').fill('100');
  await page1.getByRole('spinbutton').nth(1).click();
  await page1.getByTestId('pits-modal-average-ppm').fill('12');
  await page1.locator('.pit-info-section > div:nth-child(2) > div > .k-picker > .k-input-button').click();
  await page1.getByRole('option', { name: 'Closed' }).click();
  await page1.getByRole('spinbutton').nth(2).click();
  await page1.getByTestId('pits-modal-latitude').fill('123');
  await page1.getByRole('spinbutton').nth(3).click();
  await page1.getByTestId('pits-modal-longitude').fill('10');
  await page1.locator('.pit-info-section > div:nth-child(4) > div > .k-picker > .k-input-button').first().click();
  await page1.getByRole('option', { name: 'No' }).click();
  await page1.locator('div:nth-child(4) > div:nth-child(2) > .k-picker > .k-input-button').click();
  await page1.getByRole('option', { name: 'Yes' }).click();
  await page1.locator('.pit-specifications-section > div:nth-child(2) > div > .k-picker > .k-input-button').first().click();
  await page1.getByRole('option', { name: '1B - Soil Liner' }).click();
  await page1.locator('.pit-specifications-section > div:nth-child(2) > div:nth-child(2) > .k-picker > .k-input-button').click();
  await page1.getByText('Terrace Deposit', { exact: true }).click();
  await page1.locator('.pit-specifications-section > div:nth-child(3) > div > .k-picker > .k-input-button').first().click();
  await page1.getByRole('option', { name: 'Bigfork Chert' }).click();
  await page1.locator('div:nth-child(3) > div:nth-child(2) > .k-picker > .k-input-button').click();
  await page1.getByRole('option', { name: 'Yes' }).click();
  await page1.getByRole('combobox').filter({ hasText: /^Select$/ }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'Yes' }).click();
  await page1.getByRole('button', { name: 'Save' }).nth(1).click();
  await page1.getByRole('combobox').filter({ hasText: 'Select Special Area' }).getByLabel('select').click();
  await page1.getByRole('searchbox').click();
  await page1.locator('.row').first().click();
  // await page1.getByRole('textbox', { name: '"Add Comment"' }).click();
  // await page1.getByRole('textbox', { name: '"Add Comment"' }).fill('This is a comment');
  // await page1.getByRole('button', { name: 'Add', exact: true }).click();
  await page1.getByRole('button', { name: 'Next', exact: true }).click();

  //Features & Cement
  await page1.waitForTimeout(1000); //wait for 1 second
  await page1.locator('#WellboreInformationToolbar').getByRole('button', { name: 'Actions' }).click();
  await page1.getByRole('link', { name: 'Add Wellbore' }).click();
  await page1.getByRole('combobox', { name: 'Wellbore Type*' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'Deepened Hole' }).click();
  await page1.getByRole('combobox', { name: 'Wellbore Construction Status*' }).getByLabel('select').click();
  await page1.getByText('Permitted').click();
  await page1.getByRole('spinbutton', { name: 'Wellbore Start Depth*' }).click();
  await page1.getByTestId('fc-wbi-modal-wellbore-start-depth').fill('100');
  await page1.getByRole('spinbutton', { name: 'Kickoff Point (MD ft)' }).click();
  await page1.getByTestId('fc-wbi-modal-wellbore-kickoff-point').fill('120');
  await page1.getByRole('spinbutton', { name: 'Total Depth (MD ft)*' }).click();
  await page1.getByTestId('fc-wbi-modal-wellbore-total-depth-md').fill('1500');
  await page1.getByRole('spinbutton', { name: 'Total Depth (TVD ft)*' }).click();
  await page1.getByTestId('fc-wbi-modal-wellbore-total-depth-tvd').fill('2000');
  await page1.getByTestId('fc-wbi-modal-wellbore-hole-size').click();
  await page1.getByTestId('fc-wbi-modal-wellbore-hole-size').fill('12');
  await page1.getByRole('spinbutton', { name: 'Feet From' }).first().click();
  await page1.getByTestId('fc-wbi-modal-wellbore-entry-point-feet-from-NS').fill('500');
  await page1.getByRole('combobox', { name: '(N/S)' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'North' }).click();
  await page1.getByRole('spinbutton', { name: 'Feet From' }).nth(1).click();
  await page1.getByTestId('fc-wbi-modal-wellbore-entry-point-feet-from-EW').fill('400');
  await page1.getByRole('combobox', { name: '(E/W)' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'West' }).locator('span').click();
  await page1.getByRole('combobox', { name: 'Take Point' }).getByLabel('select').click();
  await page1.getByText('Section Boundary Crossing').click();
  await page1.getByRole('spinbutton', { name: 'Latitude (NAD83)' }).click();
  await page1.getByTestId('fc-wbi-modal-wellbore-take-point-lat').fill('123');
  await page1.getByRole('spinbutton', { name: 'Longitude (NAD83)' }).click();
  await page1.getByTestId('fc-wbi-modal-wellbore-take-point-long').fill('123');
  await page1.getByRole('spinbutton', { name: 'Feet From' }).nth(2).click();
  await page1.getByTestId('fc-wbi-modal-wellbore-locate-well-feet-from-NS').fill('500');
  await page1.locator('div:nth-child(3) > div:nth-child(2) > .k-picker > .k-input-button').click();
  await page1.getByRole('option', { name: 'North' }).click();
  await page1.getByRole('spinbutton', { name: 'Feet From' }).nth(3).click();
  await page1.getByTestId('fc-wbi-modal-wellbore-locate-well-feet-from-EW').fill('234');
  await page1.locator('div:nth-child(3) > div:nth-child(4) > .k-picker > .k-input-button').click();
  await page1.getByRole('option', { name: 'East' }).click();
  await page1.getByTestId('fc-wbi-modal-wellbore-quarter-1').click();
  await page1.getByTestId('fc-wbi-modal-wellbore-quarter-1').fill('1');
  await page1.getByTestId('fc-wbi-modal-wellbore-quarter-2').click();
  await page1.getByTestId('fc-wbi-modal-wellbore-quarter-2').fill('2');
  await page1.getByTestId('fc-wbi-modal-wellbore-quarter-3').click();
  await page1.getByTestId('fc-wbi-modal-wellbore-quarter-3').fill('1');
  await page1.getByTestId('fc-wbi-modal-wellbore-quarter-4').click();
  await page1.getByTestId('fc-wbi-modal-wellbore-quarter-4').fill('1');
  await page1.locator('#SectionContainer').getByRole('button', { name: 'select' }).click();
  await page1.getByRole('option', { name: '01' }).click();
  await page1.locator('#TownshipContainer').getByRole('button', { name: 'select' }).click();
  await page1.getByRole('option', { name: '01N' }).click();
  await page1.locator('#RangeContainer').getByRole('button', { name: 'select' }).click();
  await page1.getByRole('option', { name: '01E' }).click();
  await page1.locator('#MeridianContainer').getByRole('button', { name: 'select' }).click();
  await page1.getByRole('option', { name: 'CM' }).click();
  await page1.locator('#CountyContainer').getByRole('button', { name: 'select' }).click();
  await page1.getByText('Choctaw').click();
  await page1.getByRole('button', { name: 'Add Take Point' }).click();
  await page1.getByRole('button', { name: 'Save' }).nth(1).click();
  await page1.locator('#WellboreConstructionFeatureToolbar').getByRole('button', { name: 'Actions' }).click();
  await page1.getByRole('link', { name: 'Add Construction Feature' }).click();
  await page1.getByRole('combobox', { name: 'Feature*' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'Production Casing' }).click();
  await page1.getByRole('combobox', { name: 'Construction Status*' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'Installed', exact: true }).click();
  await page1.getByRole('combobox', { name: 'Casing Design' }).getByLabel('select').click();
  await page1.getByText('Cased & Cemented').click();
  await page1.getByRole('combobox', { name: 'Wellbore Parent*' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'Deepened Hole' }).locator('span').click();
  await page1.getByRole('spinbutton', { name: 'Feature Top MD (ft)*' }).click();
  await page1.getByTestId('fc-wbc-modal-wellbore-feature-top').fill('500');
  await page1.getByRole('spinbutton', { name: 'Feature Bottom MD (ft)*' }).click();
  await page1.getByTestId('fc-wbc-modal-wellbore-feature-bottom').fill('123444');
  await page1.getByRole('spinbutton', { name: 'Outside Diameter (decimal' }).click();
  await page1.getByTestId('fc-wbc-modal-wellbore-outside-diameter').fill('12.123');
  await page1.getByRole('spinbutton', { name: 'Inside Diameter (decimal' }).click();
  await page1.getByTestId('fc-wbc-modal-wellbore-inside-diameter').fill('13.403');
  await page1.getByRole('spinbutton', { name: 'Weight (lbs/ft)' }).click();
  await page1.getByTestId('fc-wbc-modal-wellbore-weight').fill('300');
  await page1.getByRole('spinbutton', { name: 'Burst Pressure (psi)' }).click();
  await page1.getByTestId('fc-wbc-modal-wellbore-burst-pressure').fill('1200');
  await page1.getByRole('combobox', { name: 'Grade' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'Fiber Glass' }).click();
  await page1.getByRole('combobox', { name: 'Connection Type' }).getByLabel('select').click();
  await page1.getByText('High Performance Near Flush').click();
  await page1.getByRole('combobox', { name: 'Pulled' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'Yes' }).click();
  await page1.getByTestId('fc-wbc-modal-wellbore-description').click();
  await page1.getByTestId('fc-wbc-modal-wellbore-description').fill('This is a description');
  await page1.getByRole('button', { name: 'Save' }).nth(1).click();
  await page1.locator('#CementSegmentToolbar').getByRole('button', { name: 'Actions' }).click();
  await page1.getByRole('link', { name: 'Add Cement Segment' }).click();
  await page1.getByRole('combobox', { name: 'Associated Feature*' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'Production Casing' }).click();
  await page1.getByRole('combobox', { name: 'Inside/Outside Casing*' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'Inside' }).click();
  await page1.locator('#wellbore-construction-feature-section').getByRole('button', { name: 'select' }).nth(2).click();
  await page1.getByRole('option', { name: 'Installed', exact: true }).click();
  await page1.getByRole('spinbutton', { name: 'Top (MD ft)' }).click();
  await page1.getByTestId('fc-cs-modal-top-md').fill('400');
  await page1.getByRole('spinbutton', { name: 'Bottom (MD ft)' }).click();
  await page1.getByTestId('fc-cs-modal-bottom-md').fill('600');
  await page1.getByRole('combobox', { name: 'Cement Type*' }).getByLabel('select').click();
  await page1.getByText('Class C Cement').click();
  await page1.getByRole('spinbutton', { name: 'Compressive Strength (psi)' }).click();
  await page1.getByTestId('fc-cs-modal-compressive-strength').fill('400');
  await page1.getByRole('spinbutton', { name: 'Weight (lbs/gal)' }).click();
  await page1.getByTestId('fc-cs-modal-weight').fill('200');
  await page1.getByRole('spinbutton', { name: 'Slurry Consistency (Bc)' }).click();
  await page1.getByTestId('fc-cs-modal-slurry-consistency').fill('12');
  await page1.getByRole('combobox', { name: 'Lead/Tail' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'Intermediate' }).click();
  await page1.getByRole('spinbutton', { name: 'Volume (Sacks)' }).click();
  await page1.getByTestId('fc-cs-modal-volume').fill('400');
  await page1.getByRole('spinbutton', { name: 'Yield (cu ft per sack)' }).click();
  await page1.getByTestId('fc-cs-modal-yield').fill('10');
  await page1.locator('div:nth-child(5) > .form-group > .k-numerictextbox > input').first().click();
  await page1.getByTestId('fc-cs-modal-top-of-cement').fill('4');
  await page1.getByTestId('fc-cs-modal-description').click();
  await page1.getByTestId('fc-cs-modal-description').fill('This is a description');
  await page1.getByRole('button', { name: 'Save' }).nth(1).click();
  await page1.locator('#WaterWellsToolbar').getByRole('button', { name: 'Actions' }).click();
  await page1.getByRole('link', { name: 'Add Water Well' }).click();
  await page1.getByTestId('casing-aff-wwmodal-operator-name').click();
  await page1.getByTestId('casing-aff-wwmodal-operator-name').fill('Jack Owner');
  await page1.getByTestId('casing-aff-wwmodal-operator-address-1').click();
  await page1.getByTestId('casing-aff-wwmodal-operator-address-1').fill('1 Main Street');
  await page1.getByTestId('casing-aff-wwmodal-operator-city').click();
  await page1.getByTestId('casing-aff-wwmodal-operator-city').fill('Anytown');
  await page1.getByRole('combobox', { name: 'State' }).getByLabel('select').click();
  await page1.getByRole('option', { name: 'NV' }).click();
  await page1.getByTestId('casing-aff-wwmodal-operator-zip').click();
  await page1.getByTestId('casing-aff-wwmodal-operator-zip').fill('123456');
  await page1.locator('#SectionContainer').getByRole('button', { name: 'select' }).click();
  await page1.getByRole('option', { name: '01' }).click();
  await page1.locator('#TownshipContainer').getByRole('button', { name: 'select' }).click();
  await page1.getByRole('option', { name: '01N' }).click();
  await page1.locator('#RangeContainer').getByRole('button', { name: 'select' }).click();
  await page1.getByRole('option', { name: '01E' }).click();
  await page1.locator('#MeridianContainer').getByRole('button', { name: 'select' }).click();
  await page1.getByRole('option', { name: 'CM' }).click();
  await page1.locator('#CountyContainer').getByRole('button', { name: 'select' }).click();
  await page1.getByText('Choctaw').click();
  await page1.getByTestId('casing-aff-wwmodal-quarter-1').click();
  await page1.getByTestId('casing-aff-wwmodal-quarter-1').fill('1');
  await page1.getByTestId('casing-aff-wwmodal-quarter-2').click();
  await page1.getByTestId('casing-aff-wwmodal-quarter-2').fill('1');
  await page1.getByTestId('casing-aff-wwmodal-quarter-3').click();
  await page1.getByTestId('casing-aff-wwmodal-quarter-3').fill('1');
  await page1.getByTestId('casing-aff-wwmodal-quarter-4').click();
  await page1.getByTestId('casing-aff-wwmodal-quarter-4').fill('1');
  await page1.getByRole('spinbutton', { name: 'Depth of Well (ft)*' }).click();
  await page1.getByTestId('casing-aff-wwmodal-depth').fill('300');
  await page1.getByRole('button', { name: 'Save' }).nth(1).click();
  // await page1.getByRole('textbox', { name: '"Add Comment"' }).click();
  // await page1.getByRole('textbox', { name: '"Add Comment"' }).fill('This is a comment');
  // await page1.getByRole('button', { name: 'Add' }).click();
  await page1.getByRole('button', { name: 'Next', exact: true }).click();

  //Document Upload
  await page1.waitForTimeout(1000); //wait for 1 second
  await page1.getByRole('button', { name: 'Next', exact: true }).click();

  //Operator Assertions
  await page1.waitForTimeout(1000); //wait for 1 second
  await page1.locator('#OperatorAssertions_0__AssertionResponse_Yes').check();
  await page1.locator('#OperatorAssertions_1__AssertionResponse_Yes').check();
  await page1.locator('#OperatorAssertions_2__AssertionResponse_Yes').check();
  await page1.locator('#OperatorAssertions_3__AssertionResponse_Yes').check();
  await page1.locator('#OperatorAssertions_4__AssertionResponse_Yes').check();
  await page1.locator('#OperatorAssertions_5__AssertionResponse_Yes').check();
  await page1.locator('#OperatorAssertions_6__AssertionResponse_Yes').check();
  await page1.locator('#OperatorAssertions_7__AssertionResponse_Yes').check();
  await page1.locator('#OperatorAssertions_8__AssertionResponse_Yes').check();
  await page1.locator('#OperatorAssertions_9__AssertionResponse_Yes').check();
  await page1.locator('#OperatorAssertions_10__AssertionResponse_Yes').check();
  await page1.locator('#OperatorAssertions_11__AssertionResponse_Yes').check();
  await page1.locator('#OperatorAssertions_12__AssertionResponse_Yes').check();
  await page1.locator('#OperatorAssertions_13__AssertionResponse_Yes').check();
  await page1.locator('#OperatorAssertions_14__AssertionResponse_Yes').check();
  // await page1.getByRole('textbox', { name: '"Add Comment"' }).click();
  // await page1.getByRole('textbox', { name: '"Add Comment"' }).fill('This is a comment');
  // await page1.getByRole('button', { name: 'Add' }).click();
  await page1.getByRole('button', { name: 'Next' }).click();
});